/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 03 11:55:07 GMT 2015
 */

package com.epam.tour.entity;

import org.junit.Test;

import static org.junit.Assert.*;

public class User_ESTest  {

  @Test
  public void test00()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getUsername();
      assertNull(string0);
  }

  @Test
  public void test01()  throws Throwable  {
      User user0 = new User();
      user0.setUsername("~=zv");
      String string0 = user0.getUsername();
      assertEquals("~=zv", string0);
  }

  @Test
  public void test02()  throws Throwable  {
      User user0 = new User();
      Role role0 = user0.getRole();
      assertNull(role0);
  }

  @Test
  public void test03()  throws Throwable  {
      User user0 = new User();
      Role role0 = new Role();
      user0.setRole(role0);
      Role role1 = user0.getRole();
      assertNull(role1.getRolename());
  }

  @Test
  public void test04()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }

  @Test
  public void test05()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("~=zv");
      String string0 = user0.getPassword();
      assertEquals("~=zv", string0);
  }

  @Test
  public void test06()  throws Throwable  {
      User user0 = new User();
      Role role0 = new Role();
      user0.setRole(role0);
      role0.setRolename("client");
      user0.hashCode();
  }

  @Test
  public void test07()  throws Throwable  {
      User user0 = new User();
      Role role0 = new Role();
      user0.setRole(role0);
      user0.hashCode();
  }

  @Test
  public void test08()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("#");
      user0.hashCode();
  }

  @Test
  public void test09()  throws Throwable  {
      User user0 = new User();
      user0.setUsername("~=zv");
      user0.hashCode();
  }

  @Test
  public void test10()  throws Throwable  {
      User user0 = new User();
      Role role0 = new Role();
      user0.setRole(role0);
      User user1 = new User();
      boolean boolean0 = user1.equals((Object) user0);
      assertFalse(boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      User user0 = new User();
      Role role0 = new Role();
      user0.setRole(role0);
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setRole(role0);
      boolean boolean0 = user0.equals((Object) user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("#");
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setPassword("#");
      boolean boolean0 = user0.equals((Object) user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("#");
      User user1 = new User();
      boolean boolean0 = user0.equals((Object) user1);
      assertFalse(boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      user0.setUsername("User{username='null', password='null', role=null}");
      assertFalse(user0.equals((Object)user1));
      
      user1.setUsername("User{username='null', password='null', role=null}");
      boolean boolean0 = user1.equals((Object) user0);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      user1.setUsername("User{username='null', password='null', role=null}");
      boolean boolean0 = user1.equals((Object) user0);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      User user0 = new User();
      Object object0 = new Object();
      boolean boolean0 = user0.equals(object0);
      assertFalse(boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.toString();
      assertEquals("User{username='null', password='null', role=null}", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      User user0 = new User();
      Role role0 = new Role();
      user0.setRole(role0);
      User user1 = new User();
      boolean boolean0 = user0.equals((Object) user1);
      assertFalse(boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("~@{TbW%c>R=rTn8d@# ");
      User user1 = new User();
      boolean boolean0 = user1.equals((Object) user0);
      assertFalse(boolean0);
      assertFalse(user0.equals((Object)user1));
  }

  @Test
  public void test20()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user0.setUsername("User{username='null', password='null', role=null}");
      boolean boolean0 = user1.equals((Object) user0);
      assertFalse(boolean0);
      assertFalse(user0.equals((Object)user1));
  }

  @Test
  public void test21()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.equals((Object) user0);
      assertTrue(boolean0);
  }
}
