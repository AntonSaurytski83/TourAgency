/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 03 11:51:58 GMT 2015
 */

package com.epam.tour.entity;

import org.junit.Test;

import static org.junit.Assert.*;

public class Tour_ESTest {

  @Test
  public void test00()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setHot(true);
      boolean boolean0 = tour0.isHot();
      assertTrue(boolean0);
  }

  @Test
  public void test01()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.isHot();
      assertEquals(TourType.VACATION, tour0.getType());
  }

  @Test
  public void test02()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setType((TourType) null);
      tour0.getType();
  }

  @Test
  public void test03()  throws Throwable  {
      Tour tour0 = new Tour();
      TourType tourType0 = tour0.getType();
      assertEquals(TourType.VACATION, tourType0);
  }

  @Test
  public void test04()  throws Throwable  {
      Tour tour0 = new Tour();
      String string0 = tour0.getTourname();
      assertNull(string0);
  }

  @Test
  public void test05()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setTourname("p365y^zaEfc}");
      String string0 = tour0.getTourname();
      assertEquals("p365y^zaEfc}", string0);
  }

  @Test
  public void test06()  throws Throwable  {
      Tour tour0 = new Tour();
      int int0 = tour0.getRegularDiscount();
      assertEquals(TourType.VACATION, tour0.getType());
      assertEquals(0, int0);
  }

  @Test
  public void test07()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setRegularDiscount(2);
      int int0 = tour0.getRegularDiscount();
      assertEquals(2, int0);
  }

  @Test
  public void test08()  throws Throwable  {
      Tour tour0 = new Tour();
      int int0 = tour0.getPrice();
      assertEquals(TourType.VACATION, tour0.getType());
      assertEquals(0, int0);
  }

  @Test
  public void test09()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setPrice(2934);
      int int0 = tour0.getPrice();
      assertEquals(2934, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setPrice((-3130));
      int int0 = tour0.getPrice();
      assertEquals((-3130), int0);
  }

  @Test
  public void test11()  throws Throwable  {
      Tour tour0 = new Tour();
      String string0 = tour0.getDetails();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setDetails("p365y^zaEfc}");
      String string0 = tour0.getDetails();
      assertEquals("p365y^zaEfc}", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setRegularDiscount(1994);
      tour0.hashCode();
      assertEquals(1994, tour0.getRegularDiscount());
  }

  @Test
  public void test14()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setPrice(2934);
      tour0.hashCode();
      assertEquals(2934, tour0.getPrice());
  }

  @Test
  public void test15()  throws Throwable  {
      Tour tour0 = new Tour();
      Tour tour1 = new Tour();
      tour0.setRegularDiscount(1484);
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(1484, tour0.getRegularDiscount());
      assertFalse(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setPrice(1349);
      Tour tour1 = new Tour();
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(TourType.VACATION, tour0.getType());
      assertFalse(boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      Tour tour0 = new Tour();
      assertEquals(TourType.VACATION, tour0.getType());
      
      tour0.setType((TourType) null);
      tour0.hashCode();
      assertEquals(0, tour0.getRegularDiscount());
  }

  @Test
  public void test18()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setHot(true);
      tour0.hashCode();
      assertTrue(tour0.isHot());
  }

  @Test
  public void test19()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setDetails("thRE");
      tour0.hashCode();
      assertEquals(TourType.VACATION, tour0.getType());
  }

  @Test
  public void test20()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setTourname("c0F?yo");
      tour0.hashCode();
      assertEquals(TourType.VACATION, tour0.getType());
  }

  @Test
  public void test21()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setType((TourType) null);
      Tour tour1 = new Tour();
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(TourType.VACATION, tour1.getType());
      assertFalse(boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setDetails("p365y^zaEfc}");
      Tour tour1 = new Tour();
      boolean boolean0 = tour1.equals((Object) tour0);
      assertEquals(TourType.VACATION, tour0.getType());
      assertFalse(boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setTourname("p365y^zaEfc}");
      Tour tour1 = new Tour();
      tour1.setTourname("p365y^zaEfc}");
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(TourType.VACATION, tour0.getType());
      assertTrue(boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setTourname("p365y^zaEfc}");
      Tour tour1 = new Tour();
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(TourType.VACATION, tour1.getType());
      assertFalse(boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      Tour tour0 = new Tour();
      Tour tour1 = new Tour();
      tour1.setRegularDiscount((-381));
      boolean boolean0 = tour1.equals((Object) tour0);
      assertEquals(-381, tour1.getRegularDiscount());
      assertFalse(boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      Tour tour0 = new Tour();
      Tour tour1 = new Tour();
      tour1.setPrice(1375);
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(1375, tour1.getPrice());
      assertFalse(boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      Tour tour0 = new Tour();
      boolean boolean0 = tour0.equals((Object) "c");
      assertEquals(TourType.VACATION, tour0.getType());
      assertFalse(boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.toString();
      assertEquals(TourType.VACATION, tour0.getType());
  }

  @Test
  public void test29()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setRegularDiscount((-381));
      int int0 = tour0.getRegularDiscount();
      assertEquals((-381), int0);
  }

  @Test
  public void test30()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setHot(true);
      Tour tour1 = new Tour();
      boolean boolean0 = tour0.equals((Object) tour1);
      assertTrue(tour0.isHot());
      assertFalse(boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      Tour tour0 = new Tour();
      tour0.setDetails("p365y^zaEfc}");
      Tour tour1 = new Tour();
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(TourType.VACATION, tour1.getType());
      assertFalse(boolean0);
  }

  @Test
  public void test32()  throws Throwable  {
      Tour tour0 = new Tour();
      Tour tour1 = new Tour();
      tour1.setTourname("p365y^zaEfc}");
      boolean boolean0 = tour0.equals((Object) tour1);
      assertEquals(TourType.VACATION, tour1.getType());
      assertFalse(boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      Tour tour0 = new Tour();
      boolean boolean0 = tour0.equals((Object) tour0);
      assertEquals(TourType.VACATION, tour0.getType());
      assertTrue(boolean0);
  }
}
